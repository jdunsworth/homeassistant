blueprint:
  name: Aqara Opple 4 Scene Switch
  description: 'Control anything using Aqara Opple four button remote (b486opcn01)'
  domain: automation
  input:
    remote:
      name: Remote
      description: Opple remote to use
      selector:
        device:
          manufacturer: LUMI
          model: lumi.remote.b486opcn01
    
    # ---------------------------- BUTTON TOP LEFT ----------------------------
    button_top_left_single_press:
      name: Top left button - Single press
      description: Action to run on a single press of the top left button
      default: []
      selector:
        action: {}

    button_top_left_double_press:
      name: Top left button - Double press
      description: Action to run on a double press of the top left button
      default: []
      selector:
        action: {}

    button_top_left_triple_press:
      name: Top left button - Triple press
      description: Action to run on a triple press of the top left button
      default: []
      selector:
        action: {}

    button_top_left_hold_release:
      name: Top left button - Hold release
      description: Action to run when top left button was held in and released
      default: []
      selector:
        action: {}

    # ---------------------------- BUTTON TOP RIGHT ----------------------------
    button_top_right_single_press:
      name: Top right button - Single press
      description: Action to run on a single press of the top right button
      default: []
      selector:
        action: {}

    button_top_right_double_press:
      name: Top right button - Double press
      description: Action to run on a double press of the top right button
      default: []
      selector:
        action: {}

    button_top_right_triple_press:
      name: Top right button - Triple press
      description: Action to run on a triple press of the top right button
      default: []
      selector:
        action: {}

    button_top_right_hold_release:
      name: Top right button - Hold release
      description: Action to run when top right button was held in and released
      default: []
      selector:
        action: {}

    # ---------------------------- BUTTON BOTTOM LEFT ----------------------------
    button_bottom_left_single_press:
      name: Bottom left button - Single press
      description: Action to run on a single press of the bottom left button
      default: []
      selector:
        action: {}

    button_bottom_left_double_press:
      name: Bottom left button - Double press
      description: Action to run on a double press of the bottom left button
      default: []
      selector:
        action: {}

    button_bottom_left_triple_press:
      name: Bottom left button - Triple press
      description: Action to run on a triple press of the bottom left button
      default: []
      selector:
        action: {}

    button_bottom_left_hold_release:
      name: Bottom left button - Hold release
      description: Action to run when bottom left button was held in and released
      default: []
      selector:
        action: {}

    # ---------------------------- BUTTON BOTTOM RIGHT ----------------------------
    button_bottom_right_single_press:
      name: Bottom right button - Single press
      description: Action to run on a single press of the bottom right button
      default: []
      selector:
        action: {}

    button_bottom_right_double_press:
      name: Bottom right button - Double press
      description: Action to run on a double press of the bottom right button
      default: []
      selector:
        action: {}

    button_bottom_right_triple_press:
      name: Bottom right button - Triple press
      description: Action to run on a triple press of the bottom right button
      default: []
      selector:
        action: {}

    button_bottom_right_hold_release:
      name: Bottom right button - Hold release
      description: Action to run when bottom right button was held in and released
      default: []
      selector:
        action: {}

mode: restart
max_exceeded: silent
trigger:
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
action:
- variables:
    event: '{{ trigger.event.data.command }}'
- choose:

  # ---------------------------- BUTTON TOP LEFT ----------------------------
  - conditions:
    - '{{ event == 1002 }}'
    sequence: !input 'button_top_left_single_press'
  - conditions:
    - '{{ event == 1004 }}'
    sequence: !input 'button_top_left_double_press'
  - conditions:
    - '{{ event == 1005 }}'
    sequence: !input 'button_top_left_triple_press'
  - conditions:
    - '{{ event == 1003 }}'
    sequence: !input 'button_top_left_hold_release'

  # ---------------------------- BUTTON TOP RIGHT ----------------------------
  - conditions:
    - '{{ event == 2002 }}'
    sequence: !input 'button_top_right_single_press'
  - conditions:
    - '{{ event == 2004 }}'
    sequence: !input 'button_top_right_double_press'
  - conditions:
    - '{{ event == 2005 }}'
    sequence: !input 'button_top_right_triple_press'
  - conditions:
    - '{{ event == 2003 }}'
    sequence: !input 'button_top_right_hold_release'

  # ---------------------------- BUTTON BOTTOM LEFT ----------------------------
  - conditions:
    - '{{ event == 3002 }}'
    sequence: !input 'button_bottom_left_single_press'
  - conditions:
    - '{{ event == 3004  }}'
    sequence: !input 'button_bottom_left_double_press'
  - conditions:
    - '{{ event == 3005 }}'
    sequence: !input 'button_bottom_left_triple_press'
  - conditions:
    - '{{ event == 3003 }}'
    sequence: !input 'button_bottom_left_hold_release'

  # ---------------------------- BUTTON BOTTOM RIGHT ----------------------------
  - conditions:
    - '{{ event == 4002 }}'
    sequence: !input 'button_bottom_right_single_press'
  - conditions:
    - '{{ event == 4004  }}'
    sequence: !input 'button_bottom_right_double_press'
  - conditions:
    - '{{ event == 4005 }}'
    sequence: !input 'button_bottom_right_triple_press'
  - conditions:
    - '{{ event == 4003 }}'
    sequence: !input 'button_bottom_right_hold_release'
